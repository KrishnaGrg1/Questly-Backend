name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - release
  pull_request:
    branches:
      - main
      - release

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24.2.0
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.12.1
          run_install: false # we'll run pnpm install manually

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Lint
        run: pnpm run format # or pnpm lint if you have that

      - name: Build project
        run: pnpm run build

      - name: Run tests
        run: pnpm test

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24.2.0
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.12.1
          run_install: false

      - name: Install dependencies
        run: pnpm install && pnpm install @prisma/client

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run Prisma migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy

      - name: Trigger Render Deployment
        run: curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
